version: '3.11'

services:
  postgres:
    container_name: postgres
    image: postgres:15.2
    restart: on-failure
    env_file:
      - .env
    networks:
      - postgres_network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
  redis:
    container_name: redis
    image: redis:7.0.11
    restart: on-failure
    env_file:
      - .env
    networks:
      - redis_network
    volumes:
      - redis-data:/var/lib/redis
    ports:
      - '6379:6379'
  frontend:
    container_name: frontend
    restart: on-failure
    build: ./frontend
    volumes:
      - ./frontend:/app/frontend
    ports:
      - '3000:80'
  backend:
    container_name: backend
    restart: on-failure
    build: ./backend
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    networks:
      - postgres_network
      - redis_network
    volumes:
      - ./backend:/app/backend
    ports:
      - '8000:8000'
  celery:
    container_name: celery
    restart: on-failure
    build: ./backend
    depends_on:
      - postgres
      - redis
      - backend
    entrypoint: celery -A showroom worker -l INFO
    networks:
      - postgres_network
      - redis_network
    volumes:
      - ./backend:/app/backend
    env_file:
      - .env
  flower:
    container_name: flower
    restart: on-failure
    image: mher/flower
    command: celery flower
    depends_on:
      - celery
    env_file:
      - .env
    networks:
      - redis_network
    volumes:
      - flower_data:/data
    ports:
      - '5555:5555'
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - postgres_network
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - '8008:80'
  nginx:
    container_name: nginx
    restart: on-failure
    build: ./nginx
    depends_on:
      - backend
      - frontend
    networks:
      - postgres_network
    volumes:
      - ./backend:/app/backend
    ports:
      - '80:80'

networks:
  postgres_network:
    name: postgres_network
    driver: bridge
  redis_network:
    name: redis_network
volumes:
  postgres-data:
  pgadmin-data:
  redis-data:
  flower_data:
  static:
